Current plan(s)

1.  more detailed description of ALL the challenges (TBD the level of
  details in proofs)

-> solutions to the linear one.

2. Just exposition of the first challenge and then the 4 (?)
solutions. Reverse engineer the level of details of the expository part from the solutions.

  NOTE: if we do 2., we could generalize the challenge to include
  delegation, which (by using the reduction semantics) is
  easier. Further, we can reformulate the challenge following the
  calculus in Vasco and Gay's book, chapter 2: the calculus is nicer
  (dual end type) and informal proofs are very detailed (better
  treatment of type safety than our COORD paper). On the flip side, it begs the question of why formulating the challenge if we follow S & G.

In any case:

-- Emphasis on techniques (tags, splitting, etc. rather than actual
   implementations in each system). Give a mathematical description
   not code (when possible)

-- Put effort in the comparison if the various techniques

-- Downplay the binder issue, unless it significantly interacts with linearity (example: splitting and de Brujin).


----------------------
Solutions to subject reduction

1. Tagged lists (Daniel/Alberto)

2. Linear predicate DB (Marco). Mention Linear predicate HOAS

3. Intrinsic typing in Agda (Luca)

4. EMST (Francisco?)

-----------------

Solution to safety ???

1. To be generalized

3. Kinda trivial (explain?)

-----------------

Other partecipants

Frederik (prompter)

Alceste (general theory supervision)

Lorenzo (some mechanization TBA)
