%======================================================%
% Multiplicities (graded systems)
%======================================================%

LF mult : type =
| num : nat → mult; % available to be used exactly n times

% α₁ • α₂ = α

LF • : mult → mult → mult → type =
| •/plus : plus n m k → • (num n) (num m) (num k);

% α is harmless

LF hal : mult → type =
| hal/z : hal (num zero);

% α is an identity element w.r.t. •

LF ident : mult → type =
| ident/z : ident (num zero);

% α = α

LF mult_eq : mult → mult → type =
|  mult/refl : mult_eq α α;
