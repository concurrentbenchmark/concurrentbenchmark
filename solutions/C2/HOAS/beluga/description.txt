Author: Gabriele Cecilia  
 
Advisor: Alberto Momigliano  
 
System: Beluga v1.1.1  
 
Style:  
 
- syntax: (weak) HOAS  
 
- LTS: distinguishes between free and bound transitions following Honsell et al.'s “Pi-Calculus in Coinductive Type Theory”  
 
- RED: takes congruence seriously, meaning structural congruence *is* a compatible equivalence relation  
 
First part: LTS -> RED  
 
Development: one theorem over 21 lemmas  
 
Comments: no technical lemma about binders, names or extrusion. Lemmas that require telescopes (n-ary sequences of restrictions) are accounted for by defining those sequences inductively. A tiny bit of usual boilerplate required to code existential properties. Some ingenuity to simulate lexicographic induction that the termination checker does not completely support. Still, successfully totality checked.  
 
LOC: less of 300

----------------------   
 
Second part: RED -> LTS  
 
Development: one theorem over 11 lemmas  
 
Comments: similar, but needing a couple of strengthening lemmas. The same approach (inductive definition of telescopes and induction on the structure of the corresponding existential type) eliminates the need for normalized derivations. Heavy use of mutual recursion, but still totally checked.  
 
LOC: less of 400

----------------------
